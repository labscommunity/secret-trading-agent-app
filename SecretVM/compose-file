version: '3.8'

services:
  # Renamed the service to 'app' for clarity, but you can keep 'my-test-server'
  nextapp:
    env_file:
      - .env.local
    container_name: nextapp
    image: zenopie/agent-s:v0.0.1
    networks:
      - traefik
    labels:
      traefik.enable: 'true'

      # --- Router for the API (/api) ---
      # Rule: Matches https://$DOMAIN_NAME/api/...
      traefik.http.routers.app-api.rule: Host(`$DOMAIN_NAME`) && PathPrefix(`/api`)
      traefik.http.routers.app-api.entrypoints: websecure
      traefik.http.routers.app-api.tls: 'true'
      # Service: Tells the API router to use the 'app-api-svc' service
      traefik.http.routers.app-api.service: app-api-svc
      # Service Definition: Forwards traffic to the container's internal port 8000
      traefik.http.services.app-api-svc.loadbalancer.server.port: '8000'

      # --- Router for the Frontend (everything else) ---
      # Rule: Matches https://$DOMAIN_NAME/...
      traefik.http.routers.app-frontend.rule: Host(`$DOMAIN_NAME`)
      traefik.http.routers.app-frontend.entrypoints: websecure
      traefik.http.routers.app-frontend.tls: 'true'
      # Service: Tells the frontend router to use the 'app-frontend-svc' service
      traefik.http.routers.app-frontend.service: app-frontend-svc
      # Service Definition: Forwards traffic to the container's internal port 3000 (CORRECTED)
      traefik.http.services.app-frontend-svc.loadbalancer.server.port: '3000'

  # The Traefik container remains unchanged
  traefik:
    image: traefik:v2.10
    command:
      - '--api.insecure=false'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.websecure.http.tls.options=default@file'
      - '--providers.file.directory=/etc/traefik/dynamic'
      - '--providers.file.watch=true'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/secure/cert:/certs:ro
    networks:
      - traefik
    configs:
      - source: tls_config
        target: /etc/traefik/dynamic/tls.yml

networks:
  traefik:
    driver: bridge

configs:
  tls_config:
    content: |-
      tls:
        certificates:
          - certFile: /certs/secret_vm_cert.pem
            keyFile: /certs/secret_vm_private.pem
        stores:
          default:
            defaultCertificate:
              certFile: /certs/secret_vm_cert.pem
              keyFile: /certs/secret_vm_private.pem